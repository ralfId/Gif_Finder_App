{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridCategoryItem.js","components/GridCategory.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","onChange","target","value","type","GetGif","category","a","url","fetch","response","json","data","gifs","map","gif","id","title","img","images","downsized_medium","GridCategoryItem","className","src","alt","GridCategory","loading","state","setState","useEffect","then","imgs","useFetchGifs","gifImg","GifExpertApp","ctg","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEtCN,EAAc,KAIhB,SAEI,uBAAOO,SAhBe,SAACL,GAC3BF,EAAcE,EAAEM,OAAOC,QAemBA,MAAQV,EAAaW,KAAK,Y,+BCtB3DC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE8EF,EAF9E,sBAGKG,MAAMD,GAHX,cAGZE,EAHY,gBAIKA,EAASC,OAJd,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBZ,QAVvB,kBAcXK,GAdW,4CAAH,sDCCNQ,EAAmB,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,sBAAKI,UAAU,2BAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCDHQ,EAAe,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAI3B,ECLwB,SAACA,GAEzB,MAA0Bd,mBACtB,CACIoB,KAAM,GACNc,SAAS,IAHjB,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAdAC,qBAAU,WACNxB,EAAOC,GACNwB,MAAK,SAAAC,GAEEH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,UAQlBC,EDnBwBK,CAAa1B,GAAhC2B,EAAZ,EAAOrB,KAAac,EAApB,EAAoBA,QAQpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,2CACZ,qBAAKJ,UAAU,iCAAf,SAEQW,EAAOnB,KAAI,SAAAI,GAAG,OACV,cAAC,EAAD,eACqBA,GAAZA,EAAIF,aErBxBkB,EAAe,WAGxB,MAAgC1C,mBAAS,CAAC,KAA1C,mBAAOc,EAAP,KAAiBf,EAAjB,KASA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,YAAeA,IAC5B,uBACA,6BAEIe,EAASQ,KAAI,SAAAqB,GAAG,OACZ,cAAC,EAAD,CAAyB7B,SAAU6B,GAAfA,Y,MCnBxCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5e8a4a65.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleOnChangeInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n      \r\n      if ( inputValue.trim().length > 2 ) {\r\n        setCategory(catg => [inputValue, ...catg] );\r\n      }\r\n      setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        {/* <h1>{inputValue}</h1> */}\r\n        <input onChange={handleOnChangeInput} value={ inputValue } type=\"text\" />\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const GetGif = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=C6h5e2ht1cbX5gG5BR5qb7JW2A9kBzex&q=${ category }&limit=10` ;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            img: gif.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GridCategoryItem = ({ title, img }) => {\r\n    return (\r\n        <div className='card animate__fadeInLeft'>\r\n            <img src={img} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GetGif } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GridCategoryItem } from './GridCategoryItem';\r\n\r\nexport const GridCategory = ({ category }) => {\r\n\r\n\r\n    // const [gifImg, setGifImg] = useState([])\r\n    const {data:gifImg, loading} = useFetchGifs(category);\r\n    \r\n    // useEffect(() => {\r\n    //     GetGif(category).then(setGifImg);\r\n    // }, [category]);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className='card-container animate__zoomIn'>\r\n                {\r\n                    gifImg.map(img => (\r\n                        <GridCategoryItem\r\n                            key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { GetGif } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    );\r\n\r\n\r\n    useEffect(()=>{\r\n        GetGif(category)\r\n        .then(imgs =>\r\n            {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }\r\n            );\r\n    });\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GridCategory } from './components/GridCategory';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const catgList = ['one pice', 'hxh', 'Naruto']\r\n    const [category, setCategory] = useState([''])\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     /* Correct ways to push an element */\r\n    //     // setCategory(['7 Deadly Sign', ...category])\r\n    //     setCategory( categ => ['one punch man', ...category] );\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategory= { setCategory }/>\r\n            <hr />\r\n            <ol>\r\n            {\r\n                category.map(ctg => \r\n                    <GridCategory key= {ctg} category={ctg} />\r\n                )\r\n            }\r\n            </ol>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}